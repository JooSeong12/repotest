프레임 워크(Framework) : 개발을 위한 기초 뼈대로, 코드로 만들어진 구조
프로젝트마다 공통적으로 구현되는 부분들(ex. 보안, 로그, 트랜잭션 등)이 존재한다. 프로젝트마다 공통적인 부분을 매번 구현한다는 건 상당히 비효율적이였다. 
개발자는 비즈니스 로직에만 몰두해도 시간이 부족한데, 이런 부분들까지 신경쓰기엔 너무 피곤했다.
프레임워크는 이렇게 해서 나오게 되었다. 처음부터 다 만드는것보다 이미 누가 만들어놓은 것을 가져다 쓰는 것

스프링 프레임워크(Spring framework) : java 에서 사용하는 프레임워크
======================================================================================================
API(Application Programming Interface) :
API는 손님(프로그램)이 주문할 수 있게 메뉴(명령 목록)를 정리하고, 주문(명령)을 받으면 요리사(응용프로그램)와
상호작용하여 요청된 메뉴(명령에 대한 값)를 전달합니다.
쉽게 말해, API는 프로그램들이 서로 상호작용하는 것을 도와주는 매개체로 볼 수 있습니다.

API의 역할
1. API는 서버와 데이터베이스에 대한 출입구 역할을 한다.
: 데이터베이스에는 소중한 정보들이 저장되는데요. 모든 사람들이 이 데이터베이스에 접근할 수 있으면 안 되겠지요.
 API는 이를 방지하기 위해 여러분이 가진 서버와 데이터베이스에 대한 출입구 역할을 하며, 허용된 사람들에게만 접근성을 부여해줍니다.

2. API는 애플리케이션과 기기가 원활하게 통신할 수 있도록 한다.
: 여기서 애플리케이션이란 우리가 흔히 알고 있는 스마트폰 어플이나 프로그램을 말합니다. 
API는 애플리케이션과 기기가 데이터를 원활히 주고받을 수 있도록 돕는 역할을 합니다.

3. API는 모든 접속을 표준화한다.
API는 모든 접속을 표준화하기 때문에 기계/ 운영체제 등과 상관없이 누구나 동일한 액세스를 얻을 수 있습니다. 
쉽게 말해, API는 범용 플러그처럼 작동한다고 볼 수 있습니다.
======================================================================================================
JPA(Java Persistence API)
persistence : 영속성(데이터를 생성한 프로그램을 종료해도 데이터가 사라지지 않도록 하는 특성을 영속성이라고 한다.)

데이터를 DB에 저장하는 방법엔 3가지가 있다.
1. JDBC(Java DataBase Connectivity) : 자바에서 DB에 접근할 수 있도록 하는 자바API
Web Application(DAO)에서 JDBC API를 통해 JDBC 인터페이스인 Spring JDBC에 전달되고, 구현체인 JDBC Driver가 DBMS에 접근하여 데이터를 가져온다.
2. Spring JDBC
3. Persistence Framework

======================================================================================================
프로그램이란 실행하기 전 정적인 상태로, 실행파일이다.

프로그램을 실행하면 프로세스가 된다.

프로세스란 실행중인 프로그램이다.
